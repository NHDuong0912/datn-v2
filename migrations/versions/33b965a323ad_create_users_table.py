"""Create users table

Revision ID: 33b965a323ad
Revises: 
Create Date: 2025-04-02 22:24:07.267704

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '33b965a323ad'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('external_systems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('apiKey', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('access_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('ipAddress', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('portNodeExporter', sa.Integer(), nullable=True),
    sa.Column('portPromtail', sa.Integer(), nullable=True),
    sa.Column('ownerId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ownerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nodeId', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=200), nullable=False),
    sa.Column('destination', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['nodeId'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_collection_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nodeId', sa.Integer(), nullable=True),
    sa.Column('dataSources', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['nodeId'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('onchain_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nodeId', sa.Integer(), nullable=True),
    sa.Column('blockHeight', sa.Integer(), nullable=True),
    sa.Column('transactionCount', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nodeId'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('performance_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nodeId', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('cpuUsage', sa.Float(), nullable=True),
    sa.Column('memoryUsage', sa.Float(), nullable=True),
    sa.Column('diskUsage', sa.Float(), nullable=True),
    sa.Column('networkUpUsage', sa.Float(), nullable=True),
    sa.Column('networkDownUsage', sa.Float(), nullable=True),
    sa.Column('uptime', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['nodeId'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nodeId', sa.Integer(), nullable=True),
    sa.Column('startDate', sa.DateTime(), nullable=True),
    sa.Column('endDate', sa.DateTime(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['nodeId'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('script_generators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nodeId', sa.Integer(), nullable=True),
    sa.Column('typeScript', sa.Enum('NODE_EXPORTER', 'PROMTAIL', 'LOKI', name='typescript'), nullable=True),
    sa.Column('scriptContent', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['nodeId'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('web_displays',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nodeId', sa.Integer(), nullable=True),
    sa.Column('frameUrlLogs', sa.String(length=500), nullable=True),
    sa.Column('frameUrlPerformance', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['nodeId'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('web_displays')
    op.drop_table('script_generators')
    op.drop_table('reports')
    op.drop_table('performance_data')
    op.drop_table('onchain_data')
    op.drop_table('data_collection_configs')
    op.drop_table('alerts')
    op.drop_table('nodes')
    op.drop_table('access_logs')
    op.drop_table('users')
    op.drop_table('external_systems')
    # ### end Alembic commands ###
